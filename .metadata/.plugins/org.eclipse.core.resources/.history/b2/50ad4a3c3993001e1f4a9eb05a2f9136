<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Kakao Map Example</title>
    <!-- 카카오 맵 API 스크립트 추가 -->
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=48ebc9d0984753af19dbe3b02dca2b48"></script>
</head>
<body>

<!-- 지도를 표시할 div 요소 -->
<div id="map" style="width:100%;height:400px;"></div>

<!-- 출발지와 도착지 검색 입력 폼 -->
<input type="text" id="startPlace" placeholder="출발지를 입력하세요">
<input type="text" id="endPlace" placeholder="도착지를 입력하세요">
<button onclick="searchPlaces()">검색</button>

<!-- 출발지와 도착지 좌표 -->
<input type="hidden" id="startLat">
<input type="hidden" id="startLng">
<input type="hidden" id="endLat">
<input type="hidden" id="endLng">

<!-- 거리 계산 결과를 표시할 div 요소 -->
<div id="distance"></div>

<!-- 카카오 맵 초기화 스크립트 -->
<script>
    let map;
    const markers = [];

    // API 키 설정
    kakao.maps.load(() => {
        // 지도 생성
        const mapContainer = document.getElementById('map');
        const options = {
            center: new kakao.maps.LatLng(37.5665, 126.9780), // 초기 지도 중심 좌표 (서울)
            level: 10 // 지도 확대 레벨
        };
        map = new kakao.maps.Map(mapContainer, options);
    });

    // 장소 검색 함수
    function searchPlaces() {
        // 이전에 추가된 마커 및 정보 삭제
        clearMarkers();

        const startPlace = document.getElementById('startPlace').value;
        const endPlace = document.getElementById('endPlace').value;

        // 출발지 검색
        searchPlace(startPlace, 'start');

        // 도착지 검색
        searchPlace(endPlace, 'end');
    }

    // 장소 검색 함수
    function searchPlace(query, type) {
        const ps = new kakao.maps.services.Places();

        ps.keywordSearch(query, (data, status) => {
            if (status === kakao.maps.services.Status.OK) {
                const place = data[0];
                const lat = place.y;
                const lng = place.x;

                // 검색된 위치에 마커 표시
                const marker = new kakao.maps.Marker({
                    position: new kakao.maps.LatLng(lat, lng),
                    map: map
                });

                // 검색된 위치의 좌표를 숨은 입력 필드에 설정
                document.getElementById(type + 'Lat').value = lat;
                document.getElementById(type + 'Lng').value = lng;

                // 마커 저장
                markers.push(marker);

                // 중심 좌표를 검색된 위치로 설정
                map.setCenter(new kakao.maps.LatLng(lat, lng));

                // 거리 계산
                calculateDistance();
            }
        });
    }

    // 거리 계산 함수
    function calculateDistance() {
        const distance = kakao.maps.services.Distance;
        const startLat = parseFloat(document.getElementById('startLat').value);
        const startLng = parseFloat(document.getElementById('startLng').value);
        const endLat = parseFloat(document.getElementById('endLat').value);
        const endLng = parseFloat(document
