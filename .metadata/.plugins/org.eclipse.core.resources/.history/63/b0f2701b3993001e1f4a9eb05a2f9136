<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Kakao Map Example</title>
    <!-- 카카오 맵 API 스크립트 추가 -->
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=48ebc9d0984753af19dbe3b02dca2b48"></script>
</head>
<body>

<!-- 지도를 표시할 div 요소 -->
<div id="map" style="width:100%;height:400px;"></div>

<!-- 출발지, 도착지 입력 폼 -->
<form id="searchForm">
    출발지: <input type="text" id="startPlace" />
    도착지: <input type="text" id="endPlace" />
    <input type="button" value="검색" onclick="searchPlaces();" />
</form>

<!-- 거리 결과를 표시할 div 요소 -->
<div id="distance"></div>

<!-- 카카오 맵 초기화 스크립트 -->
<script>
    const mapContainer = document.getElementById('map');
    const options = {
        center: new kakao.maps.LatLng(37.5665, 126.9780),
        level: 10
    };
    const map = new kakao.maps.Map(mapContainer, options);

    const startMarker = new kakao.maps.Marker({
        map: map
    });

    const endMarker = new kakao.maps.Marker({
        map: map
    });

    function searchPlaces() {
        const startPlace = document.getElementById('startPlace').value;
        const endPlace = document.getElementById('endPlace').value;

        searchPlace(startPlace, 'start');
        searchPlace(endPlace, 'end');
    }

    function searchPlace(query, type) {
        const ps = new kakao.maps.services.Places();

        ps.keywordSearch(query, (data, status, pagination) => {
            if (status === kakao.maps.services.Status.OK) {
                const place = data[0];

                if (type === 'start') {
                    startMarker.setPosition(new kakao.maps.LatLng(place.y, place.x));
                } else if (type === 'end') {
                    endMarker.setPosition(new kakao.maps.LatLng(place.y, place.x));
                }

                calculateDistance();
            }
        });
    }

    function calculateDistance() {
        const distance = kakao.maps.services.Distance;
        const startLat = startMarker.getPosition().getLat();
        const startLng = startMarker.getPosition().getLng();
        const endLat = endMarker.getPosition().getLat();
        const endLng = endMarker.getPosition().getLng();

        const request = {
            origins: new kakao.maps.LatLng(startLat, startLng),
            destinations: new kakao.maps.LatLng(endLat, endLng)
        };

        distance.route(request, (result, status) => {
            if (status === kakao.maps.services.Status.OK) {
                const resultDiv = document.getElementById('distance');
                resultDiv.innerHTML = '거리: ' + result.routes[0].distance.text;
            }
        });
    }
</script>

</body>
</html>
